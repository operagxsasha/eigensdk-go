// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractMockAvsServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IAllocationManagerTypesCreateSetParams is an auto generated low-level Go binding around an user-defined struct.
type IAllocationManagerTypesCreateSetParams struct {
	OperatorSetId uint32
	Strategies    []common.Address
}

// IAllocationManagerTypesSlashingParams is an auto generated low-level Go binding around an user-defined struct.
type IAllocationManagerTypesSlashingParams struct {
	Operator      common.Address
	OperatorSetId uint32
	Strategies    []common.Address
	WadsToSlash   []*big.Int
	Description   string
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// IRewardsCoordinatorTypesRewardsSubmission is an auto generated low-level Go binding around an user-defined struct.
type IRewardsCoordinatorTypesRewardsSubmission struct {
	StrategiesAndMultipliers []IRewardsCoordinatorTypesStrategyAndMultiplier
	Token                    common.Address
	Amount                   *big.Int
	StartTimestamp           uint32
	Duration                 uint32
}

// IRewardsCoordinatorTypesStrategyAndMultiplier is an auto generated low-level Go binding around an user-defined struct.
type IRewardsCoordinatorTypesStrategyAndMultiplier struct {
	Strategy   common.Address
	Multiplier *big.Int
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// ContractMockAvsServiceManagerMetaData contains all meta data concerning the ContractMockAvsServiceManager contract.
var ContractMockAvsServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_avsDirectory\",\"type\":\"address\",\"internalType\":\"contractIAVSDirectory\"},{\"name\":\"_rewardsCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRewardsCoordinator\"},{\"name\":\"_allocationManager\",\"type\":\"address\",\"internalType\":\"contractIAllocationManager\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"SLASHER_PROPOSAL_DELAY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"acceptProposedSlasher\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addStrategyToOperatorSet\",\"inputs\":[{\"name\":\"operatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"strategies\",\"type\":\"address[]\",\"internalType\":\"contractIStrategy[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"allocationManager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"avsDirectory\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blsApkRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIBLSApkRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"checkSignatures\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"createAVSRewardsSubmission\",\"inputs\":[{\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\",\"internalType\":\"structIRewardsCoordinatorTypes.RewardsSubmission[]\",\"components\":[{\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\",\"internalType\":\"structIRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"components\":[{\"name\":\"strategy\",\"type\":\"address\",\"internalType\":\"contractIStrategy\"},{\"name\":\"multiplier\",\"type\":\"uint96\",\"internalType\":\"uint96\"}]},{\"name\":\"token\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"startTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"duration\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createOperatorSets\",\"inputs\":[{\"name\":\"params\",\"type\":\"tuple[]\",\"internalType\":\"structIAllocationManagerTypes.CreateSetParams[]\",\"components\":[{\"name\":\"operatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"strategies\",\"type\":\"address[]\",\"internalType\":\"contractIStrategy[]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromOperatorSets\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSetIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_initialOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"migrationFinalized\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"proposeNewSlasher\",\"inputs\":[{\"name\":\"newSlasher\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"proposedSlasher\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registryCoordinator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"removeStrategiesFromOperatorSet\",\"inputs\":[{\"name\":\"operatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"strategies\",\"type\":\"address[]\",\"internalType\":\"contractIStrategy[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"rewardsInitiator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"setAVSRegistrar\",\"inputs\":[{\"name\":\"registrar\",\"type\":\"address\",\"internalType\":\"contractIAVSRegistrar\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setRewardsInitiator\",\"inputs\":[{\"name\":\"newRewardsInitiator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setStaleStakesForbidden\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"slashOperator\",\"inputs\":[{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIAllocationManagerTypes.SlashingParams\",\"components\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"strategies\",\"type\":\"address[]\",\"internalType\":\"contractIStrategy[]\"},{\"name\":\"wadsToSlash\",\"type\":\"uint256[]\",\"internalType\":\"uint256[]\"},{\"name\":\"description\",\"type\":\"string\",\"internalType\":\"string\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"slasher\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"slasherProposalTimestamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"stakeRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"staleStakesForbidden\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"trySignatureAndApkVerification\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[{\"name\":\"pairingSuccessful\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"siganatureIsValid\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"updateAVSMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"RewardsInitiatorUpdated\",\"inputs\":[{\"name\":\"prevRewardsInitiator\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"newRewardsInitiator\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"SlasherProposed\",\"inputs\":[{\"name\":\"newSlasher\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"slasherProposalTimestamp\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"SlasherUpdated\",\"inputs\":[{\"name\":\"prevSlasher\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"newSlasher\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StaleStakesForbiddenUpdate\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false}]",
	Bin: "0x6101a080604052346102b0576080816148cd803803809161002082856103e6565b8339810103126102b05780516001600160a01b038116918282036102b05760208101516001600160a01b03811681036102b0576040820151916001600160a01b03831683036102b05760600151916001600160a01b03831683036102b057604051636830483560e01b815291602083600481895afa9283156102bc575f936103c5575b5060805260a0528260c05260e052610100525f5460ff8160081c166103705760ff80821610610336575b5061012052604051636830483560e01b8152602081600481855afa9182156102bc576004926020925f91610309575b5061014052604051632efa2ca360e11b815292839182905afa9081156102bc575f916102c7575b50610160526101405160405163df5cf72360e01b815290602090829060049082906001600160a01b03165afa9081156102bc575f91610276575b5061018052604051614490908161043d8239608051818181610a5f01528181611216015281816112ba015261330b015260a051816118c5015260c0518181816111e6015281816113e90152818161170b01528181611e34015281816131d3015281816132db015261347d015260e051818181611ed0015281816134c90152613ed7015261010051818181610b2201528181611419015281816115ca015281816116110152818161173b015281816121a6015261320301526101205181818161088301528181610aa30152818161293d01528181612a300152612ffb015261014051818181610a1b01528181612d4e0152612eac0152610160518181816109ba0152612c8a0152610180518181816116760152612b430152f35b90506020813d6020116102b4575b81610291602093836103e6565b810103126102b057516001600160a01b03811681036102b0575f61015d565b5f80fd5b3d9150610284565b6040513d5f823e3d90fd5b90506020813d602011610301575b816102e2602093836103e6565b810103126102b057516001600160a01b03811681036102b0575f610123565b3d91506102d5565b6103299150833d851161032f575b61032181836103e6565b81019061041d565b5f6100fc565b503d610317565b60ff90811916175f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a15f6100cd565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b6103df91935060203d60201161032f5761032181836103e6565b915f6100a3565b601f909101601f19168101906001600160401b0382119082101761040957604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126102b057516001600160a01b03811681036102b0579056fe60806040526004361015610011575f80fd5b5f3560e01c8063171f1d5b1461024457806326f017e21461023f57806333cfb7b71461023a5780633bc28c8c146102355780633d07142214610230578063416c7e5e1461022b5780635df459461461022657806367940c8914610221578063683048351461021c5780636b3aa72e146102175780636d14a987146102125780636ecbccfe1461020d5780636efb463614610208578063715018a614610203578063847d634f146101fe5780638999817f146101f95780638d68349a146101f45780638da5cb5b146101ef5780639926ee7d146101ea578063a364f4da146101e5578063a98fb355146101e0578063b1344271146101db578063b98d0908146101d6578063c1a8e2c5146101d1578063c4d66de8146101cc578063ca8aa7c7146101c7578063ce7b5e4b146101c2578063df5cf723146101bd578063e46f1816146101b8578063e481af9d146101b3578063f25f1610146101ae578063f2fde38b146101a9578063fc299dee146101a4578063fcd1c3751461019f5763fce36c7d1461019a575f80fd5b61187e565b611861565b611839565b6117a8565b6116e8565b6116cd565b6116a5565b611661565b6115f9565b6115b5565b6114bb565b6113a2565b611350565b611328565b61127f565b6111c2565b611126565b6110fe565b6110dc565b611051565b610f65565b610f0a565b610e75565b610b0a565b610a8e565b610a4a565b610a06565b6109e9565b6109a5565b610851565b610770565b6105d3565b61059b565b610481565b61040f565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b0382111761027857604052565b610249565b606081019081106001600160401b0382111761027857604052565b90601f801991011681019081106001600160401b0382111761027857604052565b604051906102c860a083610298565b565b604051906102c861010083610298565b604051906102c8606083610298565b604051906102c8604083610298565b906102c86040519283610298565b60409060e319011261032f576040519061031f8261025d565b60e4358252610104356020830152565b5f80fd5b919082604091031261032f5760405161034b8161025d565b6020808294803584520135910152565b9080601f8301121561032f5760405191610376604084610298565b82906040810192831161032f57905b8282106103925750505090565b8135815260209182019101610385565b90608060631983011261032f576040516103bb8161025d565b60206103d682946103cd81606461035b565b845260a461035b565b910152565b919060808382031261032f5760206103d6604051926103f98461025d565b60408496610407838261035b565b86520161035b565b3461032f5761012036600319011261032f57600435604036602319011261032f5761046760409182516104418161025d565b60243581526044356020820152610457366103a2565b9061046136610306565b92611b9e565b8251911515825215156020820152f35b5f91031261032f57565b3461032f575f36600319011261032f57610499613ce5565b60685462093a8081018091116105385742106104dc576067546104c9906001600160a01b0316613d3d565b613d3d565b606780546001600160a01b03191690555b005b60405162461bcd60e51b815260206004820152602e60248201527f536572766963654d616e616765723a20536c61736865722070726f706f73616c60448201526d0819195b185e481b9bdd081b595d60921b6064820152608490fd5b611c84565b6001600160a01b0381160361032f57565b35906102c88261053d565b60206040818301928281528451809452019201905f5b81811061057c5750505090565b82516001600160a01b031684526020938401939092019160010161056f565b3461032f57602036600319011261032f576105cf6105c36004356105be8161053d565b611e15565b60405191829182610559565b0390f35b3461032f57602036600319011261032f576104da6004356105f38161053d565b6105fb613ce5565b613e39565b63ffffffff81160361032f57565b604435906102c882610600565b35906102c882610600565b6001600160401b0381116102785760051b60200190565b9080601f8301121561032f57813561065481610626565b926106626040519485610298565b81845260208085019260051b82010192831161032f57602001905b82821061068a5750505090565b6020809183356106998161053d565b81520191019061067d565b9080601f8301121561032f5781356106bb81610626565b926106c96040519485610298565b81845260208085019260051b82010192831161032f57602001905b8282106106f15750505090565b81358152602091820191016106e4565b6001600160401b03811161027857601f01601f191660200190565b92919261072882610701565b916107366040519384610298565b82948184528183011161032f578281602093845f960137010152565b9080601f8301121561032f5781602061076d9335910161071c565b90565b3461032f57602036600319011261032f576004356001600160401b03811161032f5760a0600319823603011261032f576107a86102b9565b6107b48260040161054e565b81526107c26024830161061b565b602082015260448201356001600160401b03811161032f576107ea906004369185010161063d565b604082015260648201356001600160401b03811161032f5761081290600436918501016106a4565b606082015260848201356001600160401b03811161032f576104da92600461083d9236920101610752565b6080820152612192565b8015150361032f57565b3461032f57602036600319011261032f5760043561086e81610847565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109a0575f91610965575b506001600160a01b031633036108d4576104da90613e97565b60405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a490fd5b90506020813d602011610998575b8161098060209383610298565b8101031261032f57516109928161053d565b5f6108bb565b3d9150610973565b611cfa565b3461032f575f36600319011261032f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461032f575f36600319011261032f57602060405162093a808152f35b3461032f575f36600319011261032f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461032f575f36600319011261032f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461032f575f36600319011261032f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90604060031983011261032f57600435610aeb81610600565b91602435906001600160401b03821161032f5761076d9160040161063d565b3461032f57610b1836610ad2565b610b20613ed5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561032f57604051630287f75160e51b8152915f918391610b7291306004850161237b565b93818381819703925af180156109a057610b8a575080f35b6104da91505f90610298565b929190610ba281610626565b93610bb06040519586610298565b602085838152019160051b810192831161032f57905b828210610bd257505050565b602080918335610be181610600565b815201910190610bc6565b9080601f8301121561032f5781602061076d93359101610b96565b81601f8201121561032f578035610c1d81610626565b92610c2b6040519485610298565b81845260208085019260061b8401019281841161032f57602001915b838310610c55575050505090565b6020604091610c648486610333565b815201920191610c47565b9080601f8301121561032f578135610c8681610626565b92610c946040519485610298565b81845260208085019260051b8201019183831161032f5760208201905b838210610cc057505050505090565b81356001600160401b03811161032f57602091610ce287848094880101610bec565b815201910190610cb1565b9190916101808184031261032f57610d036102ca565b9281356001600160401b03811161032f5781610d20918401610bec565b845260208201356001600160401b03811161032f5781610d41918401610c07565b602085015260408201356001600160401b03811161032f5781610d65918401610c07565b6040850152610d7781606084016103db565b6060850152610d898160e08401610333565b60808501526101208201356001600160401b03811161032f5781610dae918401610bec565b60a08501526101408201356001600160401b03811161032f5781610dd3918401610bec565b60c08501526101608201356001600160401b03811161032f57610df69201610c6f565b60e0830152565b90602080835192838152019201905f5b818110610e1a5750505090565b82516001600160601b0316845260209384019390920191600101610e0d565b929190610e706020916040865282610e5c82516040808a01526080890190610dfd565b910151868203603f19016060880152610dfd565b930152565b3461032f57608036600319011261032f576004356024356001600160401b03811161032f573660238201121561032f5780600401356001600160401b03811161032f57366024828401011161032f57610ecc61060e565b90606435936001600160401b03851161032f576024610ef2610efa963690600401610ced565b940190612860565b906105cf60405192839283610e39565b3461032f575f36600319011261032f57610f22613ce5565b603380546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461032f57602036600319011261032f576004356001600160401b03811161032f573660238201121561032f57806004013590610fa182610626565b90610faf6040519283610298565b8282526024602083019360051b8201019036821161032f5760248101935b828510610fdd576104da846131cd565b84356001600160401b03811161032f5782016040602319823603011261032f576040519161100a8361025d565b602482013561101881610600565b83526044820135926001600160401b03841161032f5761104260209493602486953692010161063d565b83820152815201940193610fcd565b3461032f57602036600319011261032f577f2f8afc8a78fd958f3301c0233aa326b9c4b9a2884a7483227d6b0555aaa03adb6110d76004356110928161053d565b61109a613ce5565b606780546001600160a01b0319166001600160a01b0392909216918217905542606881905560408051928352602083019190915290918291820190565b0390a1005b3461032f575f36600319011261032f57602060ff606954166040519015158152f35b3461032f575f36600319011261032f576033546040516001600160a01b039091168152602090f35b3461032f57604036600319011261032f576004356111438161053d565b602435906001600160401b03821161032f576060600319833603011261032f57604051906111708261027d565b82600401356001600160401b03811161032f5783013660238201121561032f576104da936111aa604492369060246004820135910161071c565b845260248101356020850152013560408301526132d5565b3461032f575f602036600319011261032f576004356111e08161053d565b611214337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614613140565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561032f576040516351b27a6d60e11b81526001600160a01b039091166004820152905f908290602490829084905af180156109a057610b8a575080f35b3461032f575f602036600319011261032f576004356001600160401b03811161032f576112b0903690600401610752565b6112b8613ce5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561032f5760405163a98fb35560e01b815260206004820152915f918391829084908290611316906024830190612357565b03925af180156109a057610b8a575080f35b3461032f575f36600319011261032f576066546040516001600160a01b039091168152602090f35b3461032f575f36600319011261032f57602060ff609754166040519015158152f35b9181601f8401121561032f578235916001600160401b03831161032f576020808501948460051b01011161032f57565b3461032f57604036600319011261032f576004356113bf8161053d565b6024356001600160401b03811161032f576113e1611469913690600401611372565b9190611417337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614613140565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169261145c61144d6102da565b6001600160a01b039096168652565b3060208601523691610b96565b6040830152803b1561032f57604051636e3492b560e01b8152905f90829081838161149788600483016133a1565b03925af180156109a0576114a757005b806114b55f6104da93610298565b80610477565b3461032f57602036600319011261032f576004356114d88161053d565b6115295f549161150c6114f66114f28560ff9060081c1690565b1590565b809481956115a7575b8115611587575b5061340b565b8261151d600160ff195f5416175f55565b611570575b80806141ec565b61152f57005b61153d61ff00195f54165f55565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989080602081016110d7565b61158261010061ff00195f5416175f55565b611522565b303b15915081611599575b505f611506565b60ff1660011490505f611592565b600160ff82161091506114ff565b3461032f575f36600319011261032f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461032f5761160736610ad2565b61160f613ed5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561032f5760405163b66bd98960e01b8152915f918391610b7291306004850161237b565b3461032f575f36600319011261032f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461032f575f36600319011261032f576067546040516001600160a01b039091168152602090f35b3461032f575f36600319011261032f576105cf6105c361346e565b3461032f57602036600319011261032f576004356117058161053d565b611739337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614613140565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561032f576040516334f65bfd60e21b81523060048201526001600160a01b039091166024820152905f908290604490829084905af180156109a0576114a757005b3461032f57602036600319011261032f576004356117c58161053d565b6117cd613ce5565b6001600160a01b038116156117e5576104da906141a4565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b3461032f575f36600319011261032f576065546040516001600160a01b039091168152602090f35b3461032f575f36600319011261032f576020606854604051908152f35b3461032f57602036600319011261032f576004356001600160401b03811161032f576118ae903690600401611372565b6065549091906001600160a01b03163303611ae0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316915f5b8181106119225750823b1561032f57611497925f928360405180968195829463fce36c7d60e01b845260048401613739565b5f602061198961194c6119408361193a87898b61369b565b016136bd565b6001600160a01b031690565b604061195986888a61369b565b6040516323b872dd60e01b8152336004820152306024820152910135604482015293849283919082906064820190565b03925af180156109a057611ac4575b506119ac611940602061193a84868861369b565b604051636eb1769f60e11b81523060048201526001600160a01b03861660248201529190602090839060449082905afa80156109a057611a4f6020915f948591611a97575b50611a1c611a076119408561193a888b8d61369b565b916040611a15878a8c61369b565b0135611cde565b60405163095ea7b360e01b81526001600160a01b038a166004820152602481019190915294859283919082906044820190565b03925af19182156109a057600192611a69575b50016118f0565b611a899060203d8111611a90575b611a818183610298565b8101906136c7565b505f611a62565b503d611a77565b611ab79150833d8111611abd575b611aaf8183610298565b810190611ceb565b5f6119f1565b503d611aa5565b611adb9060203d8111611a9057611a818183610298565b611998565b60405162461bcd60e51b815260206004820152604c60248201527f536572766963654d616e61676572426173652e6f6e6c7952657761726473496e60448201527f69746961746f723a2063616c6c6572206973206e6f742074686520726577617260648201526b32399034b734ba34b0ba37b960a11b608482015260a490fd5b634e487b7160e01b5f52603260045260245ffd5b906002811015611b855760051b0190565b611b60565b634e487b7160e01b5f52601260045260245ffd5b611c7a611c57611c8095611c51611c4a85875160208901518a515160208c51015160208d016020815151915101519189519360208b0151956040519760208901998a5260208a015260408901526060880152608087015260a086015260c085015260e0840152610100830152611c2181610120840103601f198101835282610298565b5190207f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001900690565b809661388c565b906138d2565b92611c51611c6c611c6661395a565b94613a51565b91611c75613b6d565b61388c565b91613bb7565b9091565b634e487b7160e01b5f52601160045260245ffd5b906001820180921161053857565b906002820180921161053857565b906003820180921161053857565b906004820180921161053857565b906005820180921161053857565b9190820180921161053857565b9081602091031261032f575190565b6040513d5f823e3d90fd5b9081602091031261032f57516001600160c01b038116810361032f5790565b9081602091031261032f575160ff8116810361032f5790565b60405190611d4c602083610298565b5f808352366020840137565b90611d6282610626565b611d6f6040519182610298565b8281528092611d80601f1991610626565b0190602036910137565b805115611b855760200190565b908151811015611b85570160200190565b6001600160601b0381160361032f57565b9081604091031261032f57602060405191611dd38361025d565b8051611dde8161053d565b83520151611deb81611da8565b602082015290565b8051821015611b855760209160051b010190565b5f1981146105385760010190565b6040516309aa152760e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690602081602481855afa9081156109a057611e95916020915f91612175575b506040518093819263871ef04960e01b8352600483019190602083019252565b0381855afa9081156109a0575f91612146575b506001600160c01b03169081159081156120e3575b506120da57611ecb90613d9b565b5f91907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690835b8151851015611f9757611f506020611f2d611f27611f198987611d97565b516001600160f81b03191690565b60f81c90565b604051633ca5a5f560e01b815260ff909116600482015291829081906024820190565b0381875afa80156109a057600192611f6f925f92611f77575b50611cde565b940193611efb565b611f9091925060203d8111611abd57611aaf8183610298565b905f611f69565b611fa2919450611d58565b925f905f5b81518110156120d457611fc0611f27611f198385611d97565b604051633ca5a5f560e01b815260ff8216600482015290602082602481895afa9182156109a0575f926120b4575b50905f915b81831061200557505050600101611fa7565b604080516356e4026d60e11b815260ff83166004820152602481018590529396929391929190816044818b5afa9182156109a0576120788b6120698361206361194060019861207d985f91612086575b50516001600160a01b031690565b92611df3565b6001600160a01b039091169052565b611e07565b95019190611ff3565b6120a7915060403d81116120ad575b61209f8183610298565b810190611db9565b5f612055565b503d612095565b6120cd91925060203d8111611abd57611aaf8183610298565b905f611fee565b50505050565b5061076d611d3d565b604051639aa1653d60e01b81529150602090829060049082905afa80156109a05760ff915f91612117575b5016155f611ebd565b612139915060203d60201161213f575b6121318183610298565b810190611d24565b5f61210e565b503d612127565b612168915060203d60201161216e575b6121608183610298565b810190611d05565b5f611ea8565b503d612156565b61218c9150823d8411611abd57611aaf8183610298565b5f611e75565b6066546001600160a01b031633036122b0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561032f5760408051633635205760e01b81523060048201526024810182905283516001600160a01b03166044820152602084015163ffffffff1660648201529083015160a060848301529092839161222d9060e484019061231b565b906060810151916043198482030160a4850152602080845192838152019301905f5b818110612297575050505f836122788296946080839501516043198483030160c4850152612357565b03925af180156109a0576122895750565b806114b55f6102c893610298565b825185528795506020948501949092019160010161224f565b60405162461bcd60e51b815260206004820152603960248201527f536572766963654d616e61676572426173652e6f6e6c79536c61736865723a2060448201527f63616c6c6572206973206e6f742074686520736c6173686572000000000000006064820152608490fd5b90602080835192838152019201905f5b8181106123385750505090565b82516001600160a01b031684526020938401939092019160010161232b565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b63ffffffff61076d949360609360018060a01b03168352166020820152816040820152019061231b565b604051906123b28261025d565b60606020838281520152565b156123c557565b60405162461bcd60e51b815260206004820152603760248201525f51602061443b5f395f51905f5260448201527f7265733a20656d7074792071756f72756d20696e7075740000000000000000006064820152608490fd5b1561242457565b60405162461bcd60e51b815260206004820152604160248201525f51602061443b5f395f51905f5260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a490fd5b1561248d57565b60a460405162461bcd60e51b815260206004820152604460248201525f51602061443b5f395f51905f5260448201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b6084820152fd5b156124f857565b60405162461bcd60e51b815260206004820152603c60248201525f51602061443b5f395f51905f5260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b000000006064820152608490fd5b5f1981019190821161053857565b1561256557565b608460405162461bcd60e51b815260206004820152604060248201525f51602061443b5f395f51905f5260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f727465646064820152fd5b9081602091031261032f575161076d81610600565b90821015611b85570190565b156125e457565b60405162461bcd60e51b815260206004820152606660248201525f51602061443b5f395f51905f5260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c490fd5b9081602091031261032f575167ffffffffffffffff198116810361032f5790565b1561269957565b60405162461bcd60e51b815260206004820152606160248201525f51602061443b5f395f51905f5260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c490fd5b9081602091031261032f575161076d81611da8565b906001600160601b03809116911603906001600160601b03821161053857565b1561275d57565b60405162461bcd60e51b815260206004820152604360248201525f51602061443b5f395f51905f5260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a490fd5b156127c857565b60405162461bcd60e51b815260206004820152603960248201525f51602061443b5f395f51905f5260448201527f7265733a207369676e617475726520697320696e76616c6964000000000000006064820152608490fd5b60049163ffffffff60e01b9060e01b1681520160208251919201905f5b81811061284a5750505090565b825184526020938401939092019160010161283d565b94939290919361286e6123a5565b5061287a8515156123be565b604084015151851480613132575b80613124575b80613116575b61289d9061241d565b6128af60208501515185515114612486565b6128c663ffffffff431663ffffffff8416106124f1565b6128ce6102e9565b5f81525f6020820152926128e06123a5565b6128e987611d58565b60208201526128f787611d58565b81526129016123a5565b92612910602088015151611d58565b8452612920602088015151611d58565b602085810191909152604051639aa1653d60e01b815290816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156109a057612989915f916130f7575b50612984368b8761071c565b613f81565b985f965b60208901518051891015612b05576020886129fa6129f08c6129e88f96868e6129cd6129ba868095611df3565b5180515f526020015160205260405f2090565b6129da8484840151611df3565b5282612ad2575b0151611df3565b519551611df3565b5163ffffffff1690565b6040516304ec635160e01b8152600481019490945263ffffffff9182166024850152166044830152816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9182156109a057611c518a612aa78f612aa08f8460208f92612a9793612a8f8460019e612aad9e5f91612ab5575b508f8060c01b03169251611df3565b520151611df3565b51938d51611df3565b5116614008565b90614039565b97019661298d565b612acc9150863d811161216e576121608183610298565b5f612a80565b612b00612ae28484840151611df3565b51612af984840151612af387612550565b90611df3565b511061255e565b6129e1565b50909597949650612b1a91989392995061411f565b91612b2760975460ff1690565b9081156130ef576040516318891fd760e31b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109a0575f916130c0575b5091905b5f925b818410612be657505050505092612bbf612bba612bb3612be09585612bd29860806060602099015192015192611b9e565b9190612756565b6127c1565b0151604051928391602083019586612820565b03601f198101835282610298565b51902090565b92989596909399919794878b888c888d612fba575b6129f08260a0612c49611f27612c3b84612c5197612c35612c276129ba8f9c604060209f9e0151611df3565b67ffffffffffffffff191690565b9b6125d1565b356001600160f81b03191690565b970151611df3565b604051631a2f32ab60e21b815260ff95909516600486015263ffffffff9182166024860152166044840152826064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156109a057612d156129f08f958f90612d0d8f978f96848f612d0760c096612d00848f60209f906129e1612c3b99604093611f279c5f91612f8c575b5067ffffffffffffffff19918216911614612692565b51906138d2565b9c6125d1565b960151611df3565b604051636414a62b60e11b815260ff94909416600485015263ffffffff9182166024850152166044830152816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156109a057612da2918c8f925f92612f68575b506020612d9492930151611df3565b906001600160601b03169052565b612dcf8c612d948c612dc8612dbb826020860151611df3565b516001600160601b031690565b9251611df3565b5f985f5b60208a015151811015612f4f578b8d612e1189612e04611f27612c3b868f89612dfc9151611df3565b5194876125d1565b60ff161c60019081161490565b612e20575b5050600101612dd3565b8a8a612ea8859f948f9686612e628f9360e0612e596129f0956020612e51611f27612c3b839f612e689c89916125d1565b9a0151611df3565b519b0151611df3565b51611df3565b60405163795f4a5760e11b815260ff909316600484015263ffffffff93841660248401526044830196909652919094166064850152839081906084820190565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109a0578f612f0e908f936001959486955f92612f19575b50612063612d9492935193612f09612dbb8487611df3565b612736565b019a90508b8d612e16565b612d949250612f416120639160203d8111612f48575b612f398183610298565b810190612721565b9250612ef1565b503d612f2f565b5093919796996001919699509a94929a01929190612b82565b612d949250612f85602091823d8111612f4857612f398183610298565b9250612d85565b6020612fad92503d8111612fb3575b612fa58183610298565b810190612671565b5f612cea565b503d612f9b565b612ff79450612fd49250611f2791612c3b916020956125d1565b60405163124d062160e11b815260ff909116600482015291829081906024820190565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156109a057602089612c518f938f60a08f97611f27612c3b8f8f90612c35612c276129ba8f60408b96918f88936129f09f61307b9061308193612c499f5f92613097575b5063ffffffff809116931690611cde565b116125dd565b5050505050509750505050505092935050612bfb565b602063ffffffff92935082916130b8913d8111611abd57611aaf8183610298565b92915061306a565b6130e2915060203d6020116130e8575b6130da8183610298565b8101906125bc565b5f612b7b565b503d6130d0565b5f9190612b7f565b613110915060203d60201161213f576121318183610298565b5f612978565b5060e0840151518514612894565b5060c084015151851461288e565b5060a0840151518514612888565b1561314757565b60405162461bcd60e51b815260206004820152605260248201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360448201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560648201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608482015260a490fd5b613201337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614613140565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561032f576040518092630130fc2760e51b8252604482013060048401526040602484015281518091526064830190602060648260051b8601019301915f905b82821061328f575050505091815f81819503925af180156109a0576122895750565b919360019193955060206132c581926063198b82030186526040838a5163ffffffff81511684520151918185820152019061231b565b960192019201869493919261326d565b613309337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614613140565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561032f575f928392604051948580948193639926ee7d60e01b835260018060a01b0316600483015260406024830152604061337e82516060604486015260a4850190612357565b91602081015160648501520151608483015203925af180156109a0576122895750565b602080825282516001600160a01b039081168284015281840151166040808401919091529092015160608083015280516080830181905260a09092019201905f5b8181106133ef5750505090565b825163ffffffff168452602093840193909201916001016133e2565b1561341257565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b604051639aa1653d60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081600481855afa80156109a05760ff915f9161367c575b50168015613672577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316905f9081905b80831061362e57506135099150611d58565b925f905f5b604051639aa1653d60e01b8152602081600481895afa80156109a05760ff915f91613610575b501681101561360957604051633ca5a5f560e01b815260ff821660048201819052602082602481895afa9182156109a0575f926135e9575b50905f915b8183106135835750505060010161350e565b604080516356e4026d60e11b815260ff83166004820152602481018590529396929391929190816044818b5afa9182156109a0576120788b612069836120636119406001986135e0985f916120865750516001600160a01b031690565b95019190613571565b61360291925060203d8111611abd57611aaf8183610298565b905f61356c565b5092505050565b613628915060203d811161213f576121318183610298565b5f613534565b604051633ca5a5f560e01b815260ff84166004820152909190602081602481885afa80156109a057600192613669925f92611f775750611cde565b920191906134f7565b505061076d611d3d565b613695915060203d60201161213f576121318183610298565b5f6134bf565b9190811015611b855760051b81013590609e198136030182121561032f570190565b3561076d8161053d565b9081602091031261032f575161076d81610847565b916020908281520191905f5b8181106136f55750505090565b90919260408060019286356137098161053d565b848060a01b031681526001600160601b03602088013561372881611da8565b1660208201520194019291016136e8565b9180602084016020855252604083019060408160051b85010193835f91609e1982360301905b848410613770575050505050505090565b90919293949596603f1982820301875287358381121561032f578401908135601e198336030181121561032f57820191602083359301906001600160401b03841161032f578360061b3603821361032f5761383983608061382e816137e46020989760019a60a08b9a5260a08701916136dc565b956138026137f389830161054e565b6001600160a01b0316868a0152565b6040810135604086015261382861381b6060830161061b565b63ffffffff166060870152565b0161061b565b63ffffffff16910152565b9901970195940192919061375f565b604051906138558261025d565b5f6020838281520152565b604051906101806138718184610298565b368337565b60405190613885602083610298565b6020368337565b9190604090606061389b613848565b94859260208551926138ad8585610298565b8436853780518452015160208301528482015260076107cf195a01fa156138d057565bfe5b6020929160806040926138e3613848565b958693818651936138f48686610298565b85368637805185520151828401528051868401520151606082015260066107cf195a01fa80156138d0571561392557565b60405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b6044820152606490fd5b6040516139668161025d565b60409081516139758382610298565b823682378152602082519161398a8484610298565b833684370152805161399c8282610298565b7f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed60208201528151906139f28383610298565b7f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d6020830152613a4783519384610298565b8252602082015290565b5f51602061441b5f395f51905f5290613a68613848565b505f919006602060c0835b613b68575f935f51602061441b5f395f51905f5260038186818180090908604051613a9e8582610298565b84368237848185604051613ab28282610298565b813682378381528360208201528360408201528560608201527f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f5260808201525f51602061441b5f395f51905f5260a082015260056107cf195a01fa80156138d057613b1c906143ce565b5191613b68575f51602061441b5f395f51905f5282800914613b5357505f51602061441b5f395f51905f5260015f94089293613a73565b92935050613b5f6102e9565b92835282015290565b611b8a565b613b75613848565b50604051613b828161025d565b600181526002602082015290565b9060068202918083046006149015171561053857565b90600c811015611b855760051b0190565b93929091613bc560406102f8565b9485526020850152613bd760406102f8565b9182526020820152613be7613860565b925f5b60028110613c1457505050602061018092613c03613876565b93849160086201d4c0fa9151151590565b80613c20600192613b90565b613c2a8285611b74565b5151613c368289613ba6565b526020613c438386611b74565b510151613c58613c5283611c98565b89613ba6565b52613c638286611b74565b515151613c72613c5283611ca6565b52613c88613c808387611b74565b515160200190565b51613c95613c5283611cb4565b526020613ca28387611b74565b51015151613cb2613c5283611cc2565b52613cde613cd8613cd16020613cc8868a611b74565b51015160200190565b5192611cd0565b88613ba6565b5201613bea565b6033546001600160a01b03163303613cf957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606654604080516001600160a01b038084168252841660208201529192917fe0d49a54274423183dadecbdf239eaac6e06ba88320b26fe8cc5ec9d050a63959190a16001600160a01b03166001600160a01b03199190911617606655565b61ffff613da782614008565b16613db181610701565b90613dbf6040519283610298565b808252613dce601f1991610701565b013660208301375f5f5b8251821080613e2e575b15613e27576001811b8416613e00575b613dfb90611e07565b613dd8565b906001613dfb9160ff60f81b8460f81b165f1a613e1d8287611d97565b5301919050613df2565b5050905090565b506101008110613de2565b606554604080516001600160a01b038084168252841660208201529192917fe11cddf1816a43318ca175bbc52cd0185436e9cbead7c83acc54a73e461717e39190a16001600160a01b03166001600160a01b03199190911617606555565b60207f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc91151560ff196097541660ff821617609755604051908152a1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303613f0757565b60405162461bcd60e51b815260206004820152604660248201527f536572766963654d616e61676572426173652e6f6e6c795374616b655265676960448201527f737472793a2063616c6c6572206973206e6f7420746865207374616b6520726560648201526567697374727960d01b608482015260a490fd5b906001613f8f60ff936142e7565b928392161b1115613f9d5790565b60405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c7565006064820152608490fd5b805f915b614014575090565b5f1981018181116105385761ffff9116911661ffff811461053857600101908061400c565b90614042613848565b5061ffff8116906102008210156140e757600182146140e2576140636102e9565b5f81525f602082015292906001905f925b61ffff831685101561408857505050505090565b600161ffff831660ff86161c8116146140c2575b60016140b86140ad8360ff946138d2565b9460011b61fffe1690565b9401169291614074565b9460016140b86140ad6140d78960ff956138d2565b98935050505061409c565b505090565b60405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b6044820152606490fd5b614127613848565b50805190811580614198575b15614154575050604051614148604082610298565b5f81525f602082015290565b60205f51602061441b5f395f51905f52910151065f51602061441b5f395f51905f52035f51602061441b5f395f51905f5281116105385760405191613a478361025d565b50602081015115614133565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b91909160ff5f5460081c161561420c576102c8926105fb6104c4926141a4565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561426c57565b60405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a490fd5b90610100825111614357578151156143525761431561430b611f27611f1985611d8a565b60ff600191161b90565b6001905b835182101561434d5760019061433861430b611f27611f198689611d97565b90614344818311614265565b17910190614319565b925050565b5f9150565b60a460405162461bcd60e51b815260206004820152604460248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b6084820152fd5b156143d557565b60405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c7572650000000000006044820152606490fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a2646970667358221220340d0cd580e75d1669d681f0561a49db0375119600b4cfffa4ac91b4405095c764736f6c634300081b0033",
}

// ContractMockAvsServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMockAvsServiceManagerMetaData.ABI instead.
var ContractMockAvsServiceManagerABI = ContractMockAvsServiceManagerMetaData.ABI

// ContractMockAvsServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMockAvsServiceManagerMetaData.Bin instead.
var ContractMockAvsServiceManagerBin = ContractMockAvsServiceManagerMetaData.Bin

// DeployContractMockAvsServiceManager deploys a new Ethereum contract, binding an instance of ContractMockAvsServiceManager to it.
func DeployContractMockAvsServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _registryCoordinator common.Address, _avsDirectory common.Address, _rewardsCoordinator common.Address, _allocationManager common.Address) (common.Address, *types.Transaction, *ContractMockAvsServiceManager, error) {
	parsed, err := ContractMockAvsServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractMockAvsServiceManagerBin), backend, _registryCoordinator, _avsDirectory, _rewardsCoordinator, _allocationManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractMockAvsServiceManager{ContractMockAvsServiceManagerCaller: ContractMockAvsServiceManagerCaller{contract: contract}, ContractMockAvsServiceManagerTransactor: ContractMockAvsServiceManagerTransactor{contract: contract}, ContractMockAvsServiceManagerFilterer: ContractMockAvsServiceManagerFilterer{contract: contract}}, nil
}

// ContractMockAvsServiceManagerMethods is an auto generated interface around an Ethereum contract.
type ContractMockAvsServiceManagerMethods interface {
	ContractMockAvsServiceManagerCalls
	ContractMockAvsServiceManagerTransacts
	ContractMockAvsServiceManagerFilters
}

// ContractMockAvsServiceManagerCalls is an auto generated interface that defines the call methods available for an Ethereum contract.
type ContractMockAvsServiceManagerCalls interface {
	SLASHERPROPOSALDELAY(opts *bind.CallOpts) (*big.Int, error)

	AllocationManager(opts *bind.CallOpts) (common.Address, error)

	AvsDirectory(opts *bind.CallOpts) (common.Address, error)

	BlsApkRegistry(opts *bind.CallOpts) (common.Address, error)

	CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error)

	Delegation(opts *bind.CallOpts) (common.Address, error)

	GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error)

	GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error)

	MigrationFinalized(opts *bind.CallOpts) (bool, error)

	Owner(opts *bind.CallOpts) (common.Address, error)

	ProposedSlasher(opts *bind.CallOpts) (common.Address, error)

	RegistryCoordinator(opts *bind.CallOpts) (common.Address, error)

	RewardsInitiator(opts *bind.CallOpts) (common.Address, error)

	Slasher(opts *bind.CallOpts) (common.Address, error)

	SlasherProposalTimestamp(opts *bind.CallOpts) (*big.Int, error)

	StakeRegistry(opts *bind.CallOpts) (common.Address, error)

	StaleStakesForbidden(opts *bind.CallOpts) (bool, error)

	TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	}, error)
}

// ContractMockAvsServiceManagerTransacts is an auto generated interface that defines the transact methods available for an Ethereum contract.
type ContractMockAvsServiceManagerTransacts interface {
	AcceptProposedSlasher(opts *bind.TransactOpts) (*types.Transaction, error)

	AddStrategyToOperatorSet(opts *bind.TransactOpts, operatorSetId uint32, strategies []common.Address) (*types.Transaction, error)

	CreateAVSRewardsSubmission(opts *bind.TransactOpts, rewardsSubmissions []IRewardsCoordinatorTypesRewardsSubmission) (*types.Transaction, error)

	CreateOperatorSets(opts *bind.TransactOpts, params []IAllocationManagerTypesCreateSetParams) (*types.Transaction, error)

	DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error)

	DeregisterOperatorFromOperatorSets(opts *bind.TransactOpts, operator common.Address, operatorSetIds []uint32) (*types.Transaction, error)

	Initialize(opts *bind.TransactOpts, _initialOwner common.Address) (*types.Transaction, error)

	ProposeNewSlasher(opts *bind.TransactOpts, newSlasher common.Address) (*types.Transaction, error)

	RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error)

	RemoveStrategiesFromOperatorSet(opts *bind.TransactOpts, operatorSetId uint32, strategies []common.Address) (*types.Transaction, error)

	RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error)

	SetAVSRegistrar(opts *bind.TransactOpts, registrar common.Address) (*types.Transaction, error)

	SetRewardsInitiator(opts *bind.TransactOpts, newRewardsInitiator common.Address) (*types.Transaction, error)

	SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error)

	SlashOperator(opts *bind.TransactOpts, params IAllocationManagerTypesSlashingParams) (*types.Transaction, error)

	TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error)

	UpdateAVSMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error)
}

// ContractMockAvsServiceManagerFilterer is an auto generated interface that defines the log filtering methods available for an Ethereum contract.
type ContractMockAvsServiceManagerFilters interface {
	FilterInitialized(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerInitializedIterator, error)
	WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerInitialized) (event.Subscription, error)
	ParseInitialized(log types.Log) (*ContractMockAvsServiceManagerInitialized, error)

	FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractMockAvsServiceManagerOwnershipTransferredIterator, error)
	WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error)
	ParseOwnershipTransferred(log types.Log) (*ContractMockAvsServiceManagerOwnershipTransferred, error)

	FilterRewardsInitiatorUpdated(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator, error)
	WatchRewardsInitiatorUpdated(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerRewardsInitiatorUpdated) (event.Subscription, error)
	ParseRewardsInitiatorUpdated(log types.Log) (*ContractMockAvsServiceManagerRewardsInitiatorUpdated, error)

	FilterSlasherProposed(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerSlasherProposedIterator, error)
	WatchSlasherProposed(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerSlasherProposed) (event.Subscription, error)
	ParseSlasherProposed(log types.Log) (*ContractMockAvsServiceManagerSlasherProposed, error)

	FilterSlasherUpdated(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerSlasherUpdatedIterator, error)
	WatchSlasherUpdated(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerSlasherUpdated) (event.Subscription, error)
	ParseSlasherUpdated(log types.Log) (*ContractMockAvsServiceManagerSlasherUpdated, error)

	FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator, error)
	WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerStaleStakesForbiddenUpdate) (event.Subscription, error)
	ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractMockAvsServiceManagerStaleStakesForbiddenUpdate, error)
}

// ContractMockAvsServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractMockAvsServiceManager struct {
	ContractMockAvsServiceManagerCaller     // Read-only binding to the contract
	ContractMockAvsServiceManagerTransactor // Write-only binding to the contract
	ContractMockAvsServiceManagerFilterer   // Log filterer for contract events
}

// ContractMockAvsServiceManager implements the ContractMockAvsServiceManagerMethods interface.
var _ ContractMockAvsServiceManagerMethods = (*ContractMockAvsServiceManager)(nil)

// ContractMockAvsServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractMockAvsServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMockAvsServiceManagerCaller implements the ContractMockAvsServiceManagerCalls interface.
var _ ContractMockAvsServiceManagerCalls = (*ContractMockAvsServiceManagerCaller)(nil)

// ContractMockAvsServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractMockAvsServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMockAvsServiceManagerTransactor implements the ContractMockAvsServiceManagerTransacts interface.
var _ ContractMockAvsServiceManagerTransacts = (*ContractMockAvsServiceManagerTransactor)(nil)

// ContractMockAvsServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractMockAvsServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractMockAvsServiceManagerFilterer implements the ContractMockAvsServiceManagerFilters interface.
var _ ContractMockAvsServiceManagerFilters = (*ContractMockAvsServiceManagerFilterer)(nil)

// ContractMockAvsServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractMockAvsServiceManagerSession struct {
	Contract     *ContractMockAvsServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// ContractMockAvsServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractMockAvsServiceManagerCallerSession struct {
	Contract *ContractMockAvsServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// ContractMockAvsServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractMockAvsServiceManagerTransactorSession struct {
	Contract     *ContractMockAvsServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// ContractMockAvsServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractMockAvsServiceManagerRaw struct {
	Contract *ContractMockAvsServiceManager // Generic contract binding to access the raw methods on
}

// ContractMockAvsServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractMockAvsServiceManagerCallerRaw struct {
	Contract *ContractMockAvsServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractMockAvsServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractMockAvsServiceManagerTransactorRaw struct {
	Contract *ContractMockAvsServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractMockAvsServiceManager creates a new instance of ContractMockAvsServiceManager, bound to a specific deployed contract.
func NewContractMockAvsServiceManager(address common.Address, backend bind.ContractBackend) (*ContractMockAvsServiceManager, error) {
	contract, err := bindContractMockAvsServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManager{ContractMockAvsServiceManagerCaller: ContractMockAvsServiceManagerCaller{contract: contract}, ContractMockAvsServiceManagerTransactor: ContractMockAvsServiceManagerTransactor{contract: contract}, ContractMockAvsServiceManagerFilterer: ContractMockAvsServiceManagerFilterer{contract: contract}}, nil
}

// NewContractMockAvsServiceManagerCaller creates a new read-only instance of ContractMockAvsServiceManager, bound to a specific deployed contract.
func NewContractMockAvsServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractMockAvsServiceManagerCaller, error) {
	contract, err := bindContractMockAvsServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerCaller{contract: contract}, nil
}

// NewContractMockAvsServiceManagerTransactor creates a new write-only instance of ContractMockAvsServiceManager, bound to a specific deployed contract.
func NewContractMockAvsServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractMockAvsServiceManagerTransactor, error) {
	contract, err := bindContractMockAvsServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerTransactor{contract: contract}, nil
}

// NewContractMockAvsServiceManagerFilterer creates a new log filterer instance of ContractMockAvsServiceManager, bound to a specific deployed contract.
func NewContractMockAvsServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractMockAvsServiceManagerFilterer, error) {
	contract, err := bindContractMockAvsServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerFilterer{contract: contract}, nil
}

// bindContractMockAvsServiceManager binds a generic wrapper to an already deployed contract.
func bindContractMockAvsServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMockAvsServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractMockAvsServiceManager.Contract.ContractMockAvsServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.ContractMockAvsServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.ContractMockAvsServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractMockAvsServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.contract.Transact(opts, method, params...)
}

// SLASHERPROPOSALDELAY is a free data retrieval call binding the contract method 0x67940c89.
//
// Solidity: function SLASHER_PROPOSAL_DELAY() view returns(uint256)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) SLASHERPROPOSALDELAY(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "SLASHER_PROPOSAL_DELAY")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SLASHERPROPOSALDELAY is a free data retrieval call binding the contract method 0x67940c89.
//
// Solidity: function SLASHER_PROPOSAL_DELAY() view returns(uint256)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) SLASHERPROPOSALDELAY() (*big.Int, error) {
	return _ContractMockAvsServiceManager.Contract.SLASHERPROPOSALDELAY(&_ContractMockAvsServiceManager.CallOpts)
}

// SLASHERPROPOSALDELAY is a free data retrieval call binding the contract method 0x67940c89.
//
// Solidity: function SLASHER_PROPOSAL_DELAY() view returns(uint256)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) SLASHERPROPOSALDELAY() (*big.Int, error) {
	return _ContractMockAvsServiceManager.Contract.SLASHERPROPOSALDELAY(&_ContractMockAvsServiceManager.CallOpts)
}

// AllocationManager is a free data retrieval call binding the contract method 0xca8aa7c7.
//
// Solidity: function allocationManager() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) AllocationManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "allocationManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AllocationManager is a free data retrieval call binding the contract method 0xca8aa7c7.
//
// Solidity: function allocationManager() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) AllocationManager() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.AllocationManager(&_ContractMockAvsServiceManager.CallOpts)
}

// AllocationManager is a free data retrieval call binding the contract method 0xca8aa7c7.
//
// Solidity: function allocationManager() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) AllocationManager() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.AllocationManager(&_ContractMockAvsServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) AvsDirectory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "avsDirectory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) AvsDirectory() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.AvsDirectory(&_ContractMockAvsServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) AvsDirectory() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.AvsDirectory(&_ContractMockAvsServiceManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) BlsApkRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "blsApkRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.BlsApkRegistry(&_ContractMockAvsServiceManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.BlsApkRegistry(&_ContractMockAvsServiceManager.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, params)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractMockAvsServiceManager.Contract.CheckSignatures(&_ContractMockAvsServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractMockAvsServiceManager.Contract.CheckSignatures(&_ContractMockAvsServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) Delegation() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.Delegation(&_ContractMockAvsServiceManager.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) Delegation() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.Delegation(&_ContractMockAvsServiceManager.CallOpts)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractMockAvsServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractMockAvsServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.GetRestakeableStrategies(&_ContractMockAvsServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.GetRestakeableStrategies(&_ContractMockAvsServiceManager.CallOpts)
}

// MigrationFinalized is a free data retrieval call binding the contract method 0x8d68349a.
//
// Solidity: function migrationFinalized() view returns(bool)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) MigrationFinalized(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "migrationFinalized")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MigrationFinalized is a free data retrieval call binding the contract method 0x8d68349a.
//
// Solidity: function migrationFinalized() view returns(bool)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) MigrationFinalized() (bool, error) {
	return _ContractMockAvsServiceManager.Contract.MigrationFinalized(&_ContractMockAvsServiceManager.CallOpts)
}

// MigrationFinalized is a free data retrieval call binding the contract method 0x8d68349a.
//
// Solidity: function migrationFinalized() view returns(bool)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) MigrationFinalized() (bool, error) {
	return _ContractMockAvsServiceManager.Contract.MigrationFinalized(&_ContractMockAvsServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) Owner() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.Owner(&_ContractMockAvsServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.Owner(&_ContractMockAvsServiceManager.CallOpts)
}

// ProposedSlasher is a free data retrieval call binding the contract method 0xe46f1816.
//
// Solidity: function proposedSlasher() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) ProposedSlasher(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "proposedSlasher")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ProposedSlasher is a free data retrieval call binding the contract method 0xe46f1816.
//
// Solidity: function proposedSlasher() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) ProposedSlasher() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.ProposedSlasher(&_ContractMockAvsServiceManager.CallOpts)
}

// ProposedSlasher is a free data retrieval call binding the contract method 0xe46f1816.
//
// Solidity: function proposedSlasher() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) ProposedSlasher() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.ProposedSlasher(&_ContractMockAvsServiceManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.RegistryCoordinator(&_ContractMockAvsServiceManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.RegistryCoordinator(&_ContractMockAvsServiceManager.CallOpts)
}

// RewardsInitiator is a free data retrieval call binding the contract method 0xfc299dee.
//
// Solidity: function rewardsInitiator() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) RewardsInitiator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "rewardsInitiator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RewardsInitiator is a free data retrieval call binding the contract method 0xfc299dee.
//
// Solidity: function rewardsInitiator() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) RewardsInitiator() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.RewardsInitiator(&_ContractMockAvsServiceManager.CallOpts)
}

// RewardsInitiator is a free data retrieval call binding the contract method 0xfc299dee.
//
// Solidity: function rewardsInitiator() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) RewardsInitiator() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.RewardsInitiator(&_ContractMockAvsServiceManager.CallOpts)
}

// Slasher is a free data retrieval call binding the contract method 0xb1344271.
//
// Solidity: function slasher() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) Slasher(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "slasher")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Slasher is a free data retrieval call binding the contract method 0xb1344271.
//
// Solidity: function slasher() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) Slasher() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.Slasher(&_ContractMockAvsServiceManager.CallOpts)
}

// Slasher is a free data retrieval call binding the contract method 0xb1344271.
//
// Solidity: function slasher() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) Slasher() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.Slasher(&_ContractMockAvsServiceManager.CallOpts)
}

// SlasherProposalTimestamp is a free data retrieval call binding the contract method 0xfcd1c375.
//
// Solidity: function slasherProposalTimestamp() view returns(uint256)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) SlasherProposalTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "slasherProposalTimestamp")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SlasherProposalTimestamp is a free data retrieval call binding the contract method 0xfcd1c375.
//
// Solidity: function slasherProposalTimestamp() view returns(uint256)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) SlasherProposalTimestamp() (*big.Int, error) {
	return _ContractMockAvsServiceManager.Contract.SlasherProposalTimestamp(&_ContractMockAvsServiceManager.CallOpts)
}

// SlasherProposalTimestamp is a free data retrieval call binding the contract method 0xfcd1c375.
//
// Solidity: function slasherProposalTimestamp() view returns(uint256)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) SlasherProposalTimestamp() (*big.Int, error) {
	return _ContractMockAvsServiceManager.Contract.SlasherProposalTimestamp(&_ContractMockAvsServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) StakeRegistry() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.StakeRegistry(&_ContractMockAvsServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractMockAvsServiceManager.Contract.StakeRegistry(&_ContractMockAvsServiceManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) StaleStakesForbidden(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "staleStakesForbidden")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) StaleStakesForbidden() (bool, error) {
	return _ContractMockAvsServiceManager.Contract.StaleStakesForbidden(&_ContractMockAvsServiceManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) StaleStakesForbidden() (bool, error) {
	return _ContractMockAvsServiceManager.Contract.StaleStakesForbidden(&_ContractMockAvsServiceManager.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractMockAvsServiceManager.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractMockAvsServiceManager.Contract.TrySignatureAndApkVerification(&_ContractMockAvsServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractMockAvsServiceManager.Contract.TrySignatureAndApkVerification(&_ContractMockAvsServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// AcceptProposedSlasher is a paid mutator transaction binding the contract method 0x26f017e2.
//
// Solidity: function acceptProposedSlasher() returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) AcceptProposedSlasher(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "acceptProposedSlasher")
}

// AcceptProposedSlasher is a paid mutator transaction binding the contract method 0x26f017e2.
//
// Solidity: function acceptProposedSlasher() returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) AcceptProposedSlasher() (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.AcceptProposedSlasher(&_ContractMockAvsServiceManager.TransactOpts)
}

// AcceptProposedSlasher is a paid mutator transaction binding the contract method 0x26f017e2.
//
// Solidity: function acceptProposedSlasher() returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) AcceptProposedSlasher() (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.AcceptProposedSlasher(&_ContractMockAvsServiceManager.TransactOpts)
}

// AddStrategyToOperatorSet is a paid mutator transaction binding the contract method 0x6ecbccfe.
//
// Solidity: function addStrategyToOperatorSet(uint32 operatorSetId, address[] strategies) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) AddStrategyToOperatorSet(opts *bind.TransactOpts, operatorSetId uint32, strategies []common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "addStrategyToOperatorSet", operatorSetId, strategies)
}

// AddStrategyToOperatorSet is a paid mutator transaction binding the contract method 0x6ecbccfe.
//
// Solidity: function addStrategyToOperatorSet(uint32 operatorSetId, address[] strategies) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) AddStrategyToOperatorSet(operatorSetId uint32, strategies []common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.AddStrategyToOperatorSet(&_ContractMockAvsServiceManager.TransactOpts, operatorSetId, strategies)
}

// AddStrategyToOperatorSet is a paid mutator transaction binding the contract method 0x6ecbccfe.
//
// Solidity: function addStrategyToOperatorSet(uint32 operatorSetId, address[] strategies) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) AddStrategyToOperatorSet(operatorSetId uint32, strategies []common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.AddStrategyToOperatorSet(&_ContractMockAvsServiceManager.TransactOpts, operatorSetId, strategies)
}

// CreateAVSRewardsSubmission is a paid mutator transaction binding the contract method 0xfce36c7d.
//
// Solidity: function createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[] rewardsSubmissions) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) CreateAVSRewardsSubmission(opts *bind.TransactOpts, rewardsSubmissions []IRewardsCoordinatorTypesRewardsSubmission) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "createAVSRewardsSubmission", rewardsSubmissions)
}

// CreateAVSRewardsSubmission is a paid mutator transaction binding the contract method 0xfce36c7d.
//
// Solidity: function createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[] rewardsSubmissions) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) CreateAVSRewardsSubmission(rewardsSubmissions []IRewardsCoordinatorTypesRewardsSubmission) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.CreateAVSRewardsSubmission(&_ContractMockAvsServiceManager.TransactOpts, rewardsSubmissions)
}

// CreateAVSRewardsSubmission is a paid mutator transaction binding the contract method 0xfce36c7d.
//
// Solidity: function createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[] rewardsSubmissions) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) CreateAVSRewardsSubmission(rewardsSubmissions []IRewardsCoordinatorTypesRewardsSubmission) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.CreateAVSRewardsSubmission(&_ContractMockAvsServiceManager.TransactOpts, rewardsSubmissions)
}

// CreateOperatorSets is a paid mutator transaction binding the contract method 0x847d634f.
//
// Solidity: function createOperatorSets((uint32,address[])[] params) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) CreateOperatorSets(opts *bind.TransactOpts, params []IAllocationManagerTypesCreateSetParams) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "createOperatorSets", params)
}

// CreateOperatorSets is a paid mutator transaction binding the contract method 0x847d634f.
//
// Solidity: function createOperatorSets((uint32,address[])[] params) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) CreateOperatorSets(params []IAllocationManagerTypesCreateSetParams) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.CreateOperatorSets(&_ContractMockAvsServiceManager.TransactOpts, params)
}

// CreateOperatorSets is a paid mutator transaction binding the contract method 0x847d634f.
//
// Solidity: function createOperatorSets((uint32,address[])[] params) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) CreateOperatorSets(params []IAllocationManagerTypesCreateSetParams) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.CreateOperatorSets(&_ContractMockAvsServiceManager.TransactOpts, params)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractMockAvsServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractMockAvsServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromOperatorSets is a paid mutator transaction binding the contract method 0xc1a8e2c5.
//
// Solidity: function deregisterOperatorFromOperatorSets(address operator, uint32[] operatorSetIds) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) DeregisterOperatorFromOperatorSets(opts *bind.TransactOpts, operator common.Address, operatorSetIds []uint32) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "deregisterOperatorFromOperatorSets", operator, operatorSetIds)
}

// DeregisterOperatorFromOperatorSets is a paid mutator transaction binding the contract method 0xc1a8e2c5.
//
// Solidity: function deregisterOperatorFromOperatorSets(address operator, uint32[] operatorSetIds) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) DeregisterOperatorFromOperatorSets(operator common.Address, operatorSetIds []uint32) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.DeregisterOperatorFromOperatorSets(&_ContractMockAvsServiceManager.TransactOpts, operator, operatorSetIds)
}

// DeregisterOperatorFromOperatorSets is a paid mutator transaction binding the contract method 0xc1a8e2c5.
//
// Solidity: function deregisterOperatorFromOperatorSets(address operator, uint32[] operatorSetIds) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) DeregisterOperatorFromOperatorSets(operator common.Address, operatorSetIds []uint32) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.DeregisterOperatorFromOperatorSets(&_ContractMockAvsServiceManager.TransactOpts, operator, operatorSetIds)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _initialOwner) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) Initialize(opts *bind.TransactOpts, _initialOwner common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "initialize", _initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _initialOwner) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) Initialize(_initialOwner common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.Initialize(&_ContractMockAvsServiceManager.TransactOpts, _initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _initialOwner) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) Initialize(_initialOwner common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.Initialize(&_ContractMockAvsServiceManager.TransactOpts, _initialOwner)
}

// ProposeNewSlasher is a paid mutator transaction binding the contract method 0x8999817f.
//
// Solidity: function proposeNewSlasher(address newSlasher) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) ProposeNewSlasher(opts *bind.TransactOpts, newSlasher common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "proposeNewSlasher", newSlasher)
}

// ProposeNewSlasher is a paid mutator transaction binding the contract method 0x8999817f.
//
// Solidity: function proposeNewSlasher(address newSlasher) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) ProposeNewSlasher(newSlasher common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.ProposeNewSlasher(&_ContractMockAvsServiceManager.TransactOpts, newSlasher)
}

// ProposeNewSlasher is a paid mutator transaction binding the contract method 0x8999817f.
//
// Solidity: function proposeNewSlasher(address newSlasher) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) ProposeNewSlasher(newSlasher common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.ProposeNewSlasher(&_ContractMockAvsServiceManager.TransactOpts, newSlasher)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.RegisterOperatorToAVS(&_ContractMockAvsServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.RegisterOperatorToAVS(&_ContractMockAvsServiceManager.TransactOpts, operator, operatorSignature)
}

// RemoveStrategiesFromOperatorSet is a paid mutator transaction binding the contract method 0xce7b5e4b.
//
// Solidity: function removeStrategiesFromOperatorSet(uint32 operatorSetId, address[] strategies) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) RemoveStrategiesFromOperatorSet(opts *bind.TransactOpts, operatorSetId uint32, strategies []common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "removeStrategiesFromOperatorSet", operatorSetId, strategies)
}

// RemoveStrategiesFromOperatorSet is a paid mutator transaction binding the contract method 0xce7b5e4b.
//
// Solidity: function removeStrategiesFromOperatorSet(uint32 operatorSetId, address[] strategies) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) RemoveStrategiesFromOperatorSet(operatorSetId uint32, strategies []common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.RemoveStrategiesFromOperatorSet(&_ContractMockAvsServiceManager.TransactOpts, operatorSetId, strategies)
}

// RemoveStrategiesFromOperatorSet is a paid mutator transaction binding the contract method 0xce7b5e4b.
//
// Solidity: function removeStrategiesFromOperatorSet(uint32 operatorSetId, address[] strategies) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) RemoveStrategiesFromOperatorSet(operatorSetId uint32, strategies []common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.RemoveStrategiesFromOperatorSet(&_ContractMockAvsServiceManager.TransactOpts, operatorSetId, strategies)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.RenounceOwnership(&_ContractMockAvsServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.RenounceOwnership(&_ContractMockAvsServiceManager.TransactOpts)
}

// SetAVSRegistrar is a paid mutator transaction binding the contract method 0xf25f1610.
//
// Solidity: function setAVSRegistrar(address registrar) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) SetAVSRegistrar(opts *bind.TransactOpts, registrar common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "setAVSRegistrar", registrar)
}

// SetAVSRegistrar is a paid mutator transaction binding the contract method 0xf25f1610.
//
// Solidity: function setAVSRegistrar(address registrar) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) SetAVSRegistrar(registrar common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SetAVSRegistrar(&_ContractMockAvsServiceManager.TransactOpts, registrar)
}

// SetAVSRegistrar is a paid mutator transaction binding the contract method 0xf25f1610.
//
// Solidity: function setAVSRegistrar(address registrar) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) SetAVSRegistrar(registrar common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SetAVSRegistrar(&_ContractMockAvsServiceManager.TransactOpts, registrar)
}

// SetRewardsInitiator is a paid mutator transaction binding the contract method 0x3bc28c8c.
//
// Solidity: function setRewardsInitiator(address newRewardsInitiator) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) SetRewardsInitiator(opts *bind.TransactOpts, newRewardsInitiator common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "setRewardsInitiator", newRewardsInitiator)
}

// SetRewardsInitiator is a paid mutator transaction binding the contract method 0x3bc28c8c.
//
// Solidity: function setRewardsInitiator(address newRewardsInitiator) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) SetRewardsInitiator(newRewardsInitiator common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SetRewardsInitiator(&_ContractMockAvsServiceManager.TransactOpts, newRewardsInitiator)
}

// SetRewardsInitiator is a paid mutator transaction binding the contract method 0x3bc28c8c.
//
// Solidity: function setRewardsInitiator(address newRewardsInitiator) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) SetRewardsInitiator(newRewardsInitiator common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SetRewardsInitiator(&_ContractMockAvsServiceManager.TransactOpts, newRewardsInitiator)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "setStaleStakesForbidden", value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SetStaleStakesForbidden(&_ContractMockAvsServiceManager.TransactOpts, value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SetStaleStakesForbidden(&_ContractMockAvsServiceManager.TransactOpts, value)
}

// SlashOperator is a paid mutator transaction binding the contract method 0x3d071422.
//
// Solidity: function slashOperator((address,uint32,address[],uint256[],string) params) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) SlashOperator(opts *bind.TransactOpts, params IAllocationManagerTypesSlashingParams) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "slashOperator", params)
}

// SlashOperator is a paid mutator transaction binding the contract method 0x3d071422.
//
// Solidity: function slashOperator((address,uint32,address[],uint256[],string) params) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) SlashOperator(params IAllocationManagerTypesSlashingParams) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SlashOperator(&_ContractMockAvsServiceManager.TransactOpts, params)
}

// SlashOperator is a paid mutator transaction binding the contract method 0x3d071422.
//
// Solidity: function slashOperator((address,uint32,address[],uint256[],string) params) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) SlashOperator(params IAllocationManagerTypesSlashingParams) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.SlashOperator(&_ContractMockAvsServiceManager.TransactOpts, params)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.TransferOwnership(&_ContractMockAvsServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.TransferOwnership(&_ContractMockAvsServiceManager.TransactOpts, newOwner)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactor) UpdateAVSMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.contract.Transact(opts, "updateAVSMetadataURI", _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.UpdateAVSMetadataURI(&_ContractMockAvsServiceManager.TransactOpts, _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerTransactorSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractMockAvsServiceManager.Contract.UpdateAVSMetadataURI(&_ContractMockAvsServiceManager.TransactOpts, _metadataURI)
}

// ContractMockAvsServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerInitializedIterator struct {
	Event *ContractMockAvsServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMockAvsServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMockAvsServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMockAvsServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMockAvsServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMockAvsServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMockAvsServiceManagerInitialized represents a Initialized event raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerInitializedIterator{contract: _ContractMockAvsServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMockAvsServiceManagerInitialized)
				if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractMockAvsServiceManagerInitialized, error) {
	event := new(ContractMockAvsServiceManagerInitialized)
	if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMockAvsServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerOwnershipTransferredIterator struct {
	Event *ContractMockAvsServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMockAvsServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMockAvsServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMockAvsServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMockAvsServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMockAvsServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMockAvsServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractMockAvsServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractMockAvsServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerOwnershipTransferredIterator{contract: _ContractMockAvsServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractMockAvsServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMockAvsServiceManagerOwnershipTransferred)
				if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractMockAvsServiceManagerOwnershipTransferred, error) {
	event := new(ContractMockAvsServiceManagerOwnershipTransferred)
	if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator is returned from FilterRewardsInitiatorUpdated and is used to iterate over the raw logs and unpacked data for RewardsInitiatorUpdated events raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator struct {
	Event *ContractMockAvsServiceManagerRewardsInitiatorUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMockAvsServiceManagerRewardsInitiatorUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMockAvsServiceManagerRewardsInitiatorUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMockAvsServiceManagerRewardsInitiatorUpdated represents a RewardsInitiatorUpdated event raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerRewardsInitiatorUpdated struct {
	PrevRewardsInitiator common.Address
	NewRewardsInitiator  common.Address
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterRewardsInitiatorUpdated is a free log retrieval operation binding the contract event 0xe11cddf1816a43318ca175bbc52cd0185436e9cbead7c83acc54a73e461717e3.
//
// Solidity: event RewardsInitiatorUpdated(address prevRewardsInitiator, address newRewardsInitiator)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) FilterRewardsInitiatorUpdated(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.FilterLogs(opts, "RewardsInitiatorUpdated")
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerRewardsInitiatorUpdatedIterator{contract: _ContractMockAvsServiceManager.contract, event: "RewardsInitiatorUpdated", logs: logs, sub: sub}, nil
}

// WatchRewardsInitiatorUpdated is a free log subscription operation binding the contract event 0xe11cddf1816a43318ca175bbc52cd0185436e9cbead7c83acc54a73e461717e3.
//
// Solidity: event RewardsInitiatorUpdated(address prevRewardsInitiator, address newRewardsInitiator)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) WatchRewardsInitiatorUpdated(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerRewardsInitiatorUpdated) (event.Subscription, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.WatchLogs(opts, "RewardsInitiatorUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMockAvsServiceManagerRewardsInitiatorUpdated)
				if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "RewardsInitiatorUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRewardsInitiatorUpdated is a log parse operation binding the contract event 0xe11cddf1816a43318ca175bbc52cd0185436e9cbead7c83acc54a73e461717e3.
//
// Solidity: event RewardsInitiatorUpdated(address prevRewardsInitiator, address newRewardsInitiator)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) ParseRewardsInitiatorUpdated(log types.Log) (*ContractMockAvsServiceManagerRewardsInitiatorUpdated, error) {
	event := new(ContractMockAvsServiceManagerRewardsInitiatorUpdated)
	if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "RewardsInitiatorUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMockAvsServiceManagerSlasherProposedIterator is returned from FilterSlasherProposed and is used to iterate over the raw logs and unpacked data for SlasherProposed events raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerSlasherProposedIterator struct {
	Event *ContractMockAvsServiceManagerSlasherProposed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMockAvsServiceManagerSlasherProposedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMockAvsServiceManagerSlasherProposed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMockAvsServiceManagerSlasherProposed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMockAvsServiceManagerSlasherProposedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMockAvsServiceManagerSlasherProposedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMockAvsServiceManagerSlasherProposed represents a SlasherProposed event raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerSlasherProposed struct {
	NewSlasher               common.Address
	SlasherProposalTimestamp *big.Int
	Raw                      types.Log // Blockchain specific contextual infos
}

// FilterSlasherProposed is a free log retrieval operation binding the contract event 0x2f8afc8a78fd958f3301c0233aa326b9c4b9a2884a7483227d6b0555aaa03adb.
//
// Solidity: event SlasherProposed(address newSlasher, uint256 slasherProposalTimestamp)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) FilterSlasherProposed(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerSlasherProposedIterator, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.FilterLogs(opts, "SlasherProposed")
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerSlasherProposedIterator{contract: _ContractMockAvsServiceManager.contract, event: "SlasherProposed", logs: logs, sub: sub}, nil
}

// WatchSlasherProposed is a free log subscription operation binding the contract event 0x2f8afc8a78fd958f3301c0233aa326b9c4b9a2884a7483227d6b0555aaa03adb.
//
// Solidity: event SlasherProposed(address newSlasher, uint256 slasherProposalTimestamp)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) WatchSlasherProposed(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerSlasherProposed) (event.Subscription, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.WatchLogs(opts, "SlasherProposed")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMockAvsServiceManagerSlasherProposed)
				if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "SlasherProposed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSlasherProposed is a log parse operation binding the contract event 0x2f8afc8a78fd958f3301c0233aa326b9c4b9a2884a7483227d6b0555aaa03adb.
//
// Solidity: event SlasherProposed(address newSlasher, uint256 slasherProposalTimestamp)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) ParseSlasherProposed(log types.Log) (*ContractMockAvsServiceManagerSlasherProposed, error) {
	event := new(ContractMockAvsServiceManagerSlasherProposed)
	if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "SlasherProposed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMockAvsServiceManagerSlasherUpdatedIterator is returned from FilterSlasherUpdated and is used to iterate over the raw logs and unpacked data for SlasherUpdated events raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerSlasherUpdatedIterator struct {
	Event *ContractMockAvsServiceManagerSlasherUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMockAvsServiceManagerSlasherUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMockAvsServiceManagerSlasherUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMockAvsServiceManagerSlasherUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMockAvsServiceManagerSlasherUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMockAvsServiceManagerSlasherUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMockAvsServiceManagerSlasherUpdated represents a SlasherUpdated event raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerSlasherUpdated struct {
	PrevSlasher common.Address
	NewSlasher  common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterSlasherUpdated is a free log retrieval operation binding the contract event 0xe0d49a54274423183dadecbdf239eaac6e06ba88320b26fe8cc5ec9d050a6395.
//
// Solidity: event SlasherUpdated(address prevSlasher, address newSlasher)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) FilterSlasherUpdated(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerSlasherUpdatedIterator, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.FilterLogs(opts, "SlasherUpdated")
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerSlasherUpdatedIterator{contract: _ContractMockAvsServiceManager.contract, event: "SlasherUpdated", logs: logs, sub: sub}, nil
}

// WatchSlasherUpdated is a free log subscription operation binding the contract event 0xe0d49a54274423183dadecbdf239eaac6e06ba88320b26fe8cc5ec9d050a6395.
//
// Solidity: event SlasherUpdated(address prevSlasher, address newSlasher)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) WatchSlasherUpdated(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerSlasherUpdated) (event.Subscription, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.WatchLogs(opts, "SlasherUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMockAvsServiceManagerSlasherUpdated)
				if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "SlasherUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSlasherUpdated is a log parse operation binding the contract event 0xe0d49a54274423183dadecbdf239eaac6e06ba88320b26fe8cc5ec9d050a6395.
//
// Solidity: event SlasherUpdated(address prevSlasher, address newSlasher)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) ParseSlasherUpdated(log types.Log) (*ContractMockAvsServiceManagerSlasherUpdated, error) {
	event := new(ContractMockAvsServiceManagerSlasherUpdated)
	if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "SlasherUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator is returned from FilterStaleStakesForbiddenUpdate and is used to iterate over the raw logs and unpacked data for StaleStakesForbiddenUpdate events raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator struct {
	Event *ContractMockAvsServiceManagerStaleStakesForbiddenUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractMockAvsServiceManagerStaleStakesForbiddenUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractMockAvsServiceManagerStaleStakesForbiddenUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractMockAvsServiceManagerStaleStakesForbiddenUpdate represents a StaleStakesForbiddenUpdate event raised by the ContractMockAvsServiceManager contract.
type ContractMockAvsServiceManagerStaleStakesForbiddenUpdate struct {
	Value bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterStaleStakesForbiddenUpdate is a free log retrieval operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.FilterLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractMockAvsServiceManagerStaleStakesForbiddenUpdateIterator{contract: _ContractMockAvsServiceManager.contract, event: "StaleStakesForbiddenUpdate", logs: logs, sub: sub}, nil
}

// WatchStaleStakesForbiddenUpdate is a free log subscription operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractMockAvsServiceManagerStaleStakesForbiddenUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractMockAvsServiceManager.contract.WatchLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractMockAvsServiceManagerStaleStakesForbiddenUpdate)
				if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStaleStakesForbiddenUpdate is a log parse operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractMockAvsServiceManager *ContractMockAvsServiceManagerFilterer) ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractMockAvsServiceManagerStaleStakesForbiddenUpdate, error) {
	event := new(ContractMockAvsServiceManagerStaleStakesForbiddenUpdate)
	if err := _ContractMockAvsServiceManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
